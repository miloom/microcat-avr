/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_IMU_IMU_PB_H_INCLUDED
#define PB_IMU_IMU_PB_H_INCLUDED
#include "../nanopb/pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct imu_gyro_data {
    float x;
    float y;
    float z;
} imu_gyro_data_t;

typedef struct imu_accel_data {
    float x;
    float y;
    float z;
} imu_accel_data_t;

typedef struct imu_telemetry {
    bool has_gyro;
    imu_gyro_data_t gyro;
    bool has_accel;
    imu_accel_data_t accel;
} imu_telemetry_t;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define IMU_GYRO_DATA_INIT_DEFAULT               {0, 0, 0}
#define IMU_ACCEL_DATA_INIT_DEFAULT              {0, 0, 0}
#define IMU_TELEMETRY_INIT_DEFAULT               {false, IMU_GYRO_DATA_INIT_DEFAULT, false, IMU_ACCEL_DATA_INIT_DEFAULT}
#define IMU_GYRO_DATA_INIT_ZERO                  {0, 0, 0}
#define IMU_ACCEL_DATA_INIT_ZERO                 {0, 0, 0}
#define IMU_TELEMETRY_INIT_ZERO                  {false, IMU_GYRO_DATA_INIT_ZERO, false, IMU_ACCEL_DATA_INIT_ZERO}

/* Field tags (for use in manual encoding/decoding) */
#define IMU_GYRO_DATA_X_TAG                      1
#define IMU_GYRO_DATA_Y_TAG                      2
#define IMU_GYRO_DATA_Z_TAG                      3
#define IMU_ACCEL_DATA_X_TAG                     1
#define IMU_ACCEL_DATA_Y_TAG                     2
#define IMU_ACCEL_DATA_Z_TAG                     3
#define IMU_TELEMETRY_GYRO_TAG                   1
#define IMU_TELEMETRY_ACCEL_TAG                  2

/* Struct field encoding specification for nanopb */
#define IMU_GYRO_DATA_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    x,                 1) \
X(a, STATIC,   SINGULAR, FLOAT,    y,                 2) \
X(a, STATIC,   SINGULAR, FLOAT,    z,                 3)
#define IMU_GYRO_DATA_CALLBACK NULL
#define IMU_GYRO_DATA_DEFAULT NULL

#define IMU_ACCEL_DATA_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    x,                 1) \
X(a, STATIC,   SINGULAR, FLOAT,    y,                 2) \
X(a, STATIC,   SINGULAR, FLOAT,    z,                 3)
#define IMU_ACCEL_DATA_CALLBACK NULL
#define IMU_ACCEL_DATA_DEFAULT NULL

#define IMU_TELEMETRY_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  gyro,              1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  accel,             2)
#define IMU_TELEMETRY_CALLBACK NULL
#define IMU_TELEMETRY_DEFAULT NULL
#define imu_telemetry_t_gyro_MSGTYPE imu_gyro_data_t
#define imu_telemetry_t_accel_MSGTYPE imu_accel_data_t

extern const pb_msgdesc_t imu_gyro_data_t_msg;
extern const pb_msgdesc_t imu_accel_data_t_msg;
extern const pb_msgdesc_t imu_telemetry_t_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define IMU_GYRO_DATA_FIELDS &imu_gyro_data_t_msg
#define IMU_ACCEL_DATA_FIELDS &imu_accel_data_t_msg
#define IMU_TELEMETRY_FIELDS &imu_telemetry_t_msg

/* Maximum encoded size of messages (where known) */
#define IMU_ACCEL_DATA_SIZE                      15
#define IMU_GYRO_DATA_SIZE                       15
#define IMU_IMU_PB_H_MAX_SIZE                    IMU_TELEMETRY_SIZE
#define IMU_TELEMETRY_SIZE                       34

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
