/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_MOTOR_MOTOR_PB_H_INCLUDED
#define PB_MOTOR_MOTOR_PB_H_INCLUDED
#include "../nanopb/pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum motor_location {
    MOTOR_LOCATION_FRONT_RIGHT = 0,
    MOTOR_LOCATION_BACK_RIGHT = 1,
    MOTOR_LOCATION_BACK_LEFT = 2,
    MOTOR_LOCATION_FRONT_LEFT = 3
} motor_location_t;

/* Struct definitions */
typedef struct motor_motor_target {
    float target_position;
    float amplitude;
    float frequency;
    motor_location_t location;
} motor_motor_target_t;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _MOTOR_LOCATION_MIN MOTOR_LOCATION_FRONT_RIGHT
#define _MOTOR_LOCATION_MAX MOTOR_LOCATION_FRONT_LEFT
#define _MOTOR_LOCATION_ARRAYSIZE ((motor_location_t)(MOTOR_LOCATION_FRONT_LEFT+1))

#define motor_motor_target_t_location_ENUMTYPE motor_location_t


/* Initializer values for message structs */
#define MOTOR_MOTOR_TARGET_INIT_DEFAULT          {0, 0, 0, _MOTOR_LOCATION_MIN}
#define MOTOR_MOTOR_TARGET_INIT_ZERO             {0, 0, 0, _MOTOR_LOCATION_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define MOTOR_MOTOR_TARGET_TARGET_POSITION_TAG   1
#define MOTOR_MOTOR_TARGET_AMPLITUDE_TAG         2
#define MOTOR_MOTOR_TARGET_FREQUENCY_TAG         3
#define MOTOR_MOTOR_TARGET_LOCATION_TAG          4

/* Struct field encoding specification for nanopb */
#define MOTOR_MOTOR_TARGET_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    target_position,   1) \
X(a, STATIC,   SINGULAR, FLOAT,    amplitude,         2) \
X(a, STATIC,   SINGULAR, FLOAT,    frequency,         3) \
X(a, STATIC,   SINGULAR, UENUM,    location,          4)
#define MOTOR_MOTOR_TARGET_CALLBACK NULL
#define MOTOR_MOTOR_TARGET_DEFAULT NULL

extern const pb_msgdesc_t motor_motor_target_t_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define MOTOR_MOTOR_TARGET_FIELDS &motor_motor_target_t_msg

/* Maximum encoded size of messages (where known) */
#define MOTOR_MOTOR_PB_H_MAX_SIZE                MOTOR_MOTOR_TARGET_SIZE
#define MOTOR_MOTOR_TARGET_SIZE                  17

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
